//====================================================
//=     ______            _____                
//=     | ___ \          |  ___|               
//=     | |_/ /__ _  __ _| |__ _ __ ___  _   _ 
//=     |    // _` |/ _` |  __| '_ ` _ \| | | |
//=     | |\ \ (_| | (_| | |__| | | | | | |_| |
//=     \_| \_\__,_|\__, \____/_| |_| |_|\__,_|
//=                  __/ |                     
//=                 |___/                      
//=
//=            http://ragemu.org/board/
//====================================================
//= http://herc.ws/board/topic/928-memory-slasher-may-30-patch/
//====================================================
//= Fields (TODO/INCOMPLETE)
//= arenas: ({
//=		//- allowedTypes defines what kind of applications the arena will accept, setting is not case-sensitive and is ok with whitespaces
//= 		allowedTypes: "Solo | Party" //Arena Accepts solo and party-type joins
//=     	allowedTypes: "guild|party" //Arena Accepts solo and guild-type joins
//=			allowedTypes: "All" //Arena Accepts solo, party and guild-type joins
//=		//- fillAnnounce (optional arena param)
//= })
battlegrounds: (
{
	/* Feature is not complete */
	feature_off: true
	/* Character variable for global bg delay */
	global_delay_var: "BG_Delay_Tick"
	/* How many seconds to consider a player "afk" and kick him out? */
	maximum_afk_seconds: 30

	/* One can add as many as he wishes */
	/* For custom ones, need to edit "lua files/entryqueue/entryqueuelist.lua" [Ind/Hercules] */
	arenas: ({
		name: "Tierra Gorge" // Must match the name in client files
		event: "Tierra_BG2::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 99
		reward: { /* Amount of badges awarded on each case */
			win: 3
			loss: 1
			draw: 1
		}
		minPlayers: 6 /* Minimum amount of players to start */
		maxPlayers: 60 /* Maximum amount of players */
		minTeamPlayers: 6 /* Minimum amount of team members required for a team (party or guild) to join */
		delay_var: "Tierra_BG_Tick" /* Char variable name that will store the delay for this match */
		maxDuration: 30 /* Maximum duration in minutes, if reached game ends and highest score wins (or calls a draw if scores are equal) */
		fillDuration: 20 /* Time in seconds to wait for more applications when minimum has been reached */
		pGameDuration: 20 /* Time to wait for players to confirm their attendence after queueing process has finished */
	},{
		name: "Flavius" // Must match the name in client files
		event: "start#bat_b01::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 99
		reward: { /* Amount of badges awarded on each case */
			win: 9
			loss: 3
			draw: 3
		}
		minPlayers: 2 /* Minimum amount of players to start (DEBUG VALUE, CHANGE BACK) */
		maxPlayers: 60 /* Maximum amount of players */
		minTeamPlayers: 6 /* Minimum amount of team members required for a team (party or guild) to join */
		delay_var: "Flavius_BG_Tick" /* Char variable name that will store the delay for this match */
		maxDuration: 30 /* Maximum duration in minutes, if reached game ends and highest score wins (or calls a draw if scores are equal) */
		fillDuration: 20 /* Time in seconds to wait for more applications when minimum has been reached */
		pGameDuration: 20 /* Time to wait for players to confirm their attendence after queueing process has finished */
	},{
		name: "KVM (Level 80 and up)" // Must match the name in client files
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 80
		maxLevel: 99
		reward: { /* Amount of badges awarded on each case */
			win: 5
			loss: 1
			draw: 1
		}
		minPlayers: 4 /* Minimum amount of players to start */
		maxPlayers: 60 /* Maximum amount of players */
		minTeamPlayers: 5 /* Minimum amount of team members required for a team (party or guild) to join */
		delay_var: "KVM_BG_Tick" /* Char variable name that will store the delay for this match */
		maxDuration: 30 /* Maximum duration in minutes, if reached game ends and highest score wins (or calls a draw if scores are equal) */
		fillDuration: 20 /* Time in seconds to wait for more applications when minimum has been reached */
		pGameDuration: 20 /* Time to wait for players to confirm their attendence after queueing process has finished */
	},{
		name: "KVM (Level 60~79)" // Must match the name in client files
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 60
		maxLevel: 79
		reward: { /* Amount of badges awarded on each case */
			win: 2
			loss: 0
			draw: 1
		}
		minPlayers: 4 /* Minimum amount of players to start */
		maxPlayers: 60 /* Maximum amount of players */
		minTeamPlayers: 5 /* Minimum amount of team members required for a team (party or guild) to join */
		delay_var: "KVM_BG_Tick" /* Char variable name that will store the delay for this match */
		maxDuration: 30 /* Maximum duration in minutes, if reached game ends and highest score wins (or calls a draw if scores are equal) */
		fillDuration: 20 /* Time in seconds to wait for more applications when minimum has been reached */
		pGameDuration: 20 /* Time to wait for players to confirm their attendence after queueing process has finished */
	},{
		name: "KVM (Level 59 and below)" // Must match the name in client files
		event: "KvM03_BG::OnPlayerListReady"
		allowedTypes: "All" /* Solo, Party and Guild */
		minLevel: 1
		maxLevel: 59
		reward: { /* Amount of badges awarded on each case */
			win: 1
			loss: 0
			draw: 0
		}
		minPlayers: 4 /* Minimum amount of players to start */
		maxPlayers: 60 /* Maximum amount of players */
		minTeamPlayers: 5 /* Minimum amount of team members required for a team (party or guild) to join */
		delay_var: "KVM_BG_Tick" /* Char variable name that will store the delay for this match */
		maxDuration: 30 /* Maximum duration in minutes, if reached game ends and highest score wins (or calls a draw if scores are equal) */
		fillDuration: 20 /* Time in seconds to wait for more applications when minimum has been reached */
		pGameDuration: 20 /* Time to wait for players to confirm their attendence after queueing process has finished */
	}
	)
})
